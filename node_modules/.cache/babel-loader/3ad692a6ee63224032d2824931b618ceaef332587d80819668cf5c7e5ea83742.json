{"ast":null,"code":"var _jsxFileName = \"D:\\\\front_end_denemeler\\\\react_denemeler\\\\proje\\\\todos-react\\\\src\\\\components\\\\todos\\\\List\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List({\n  todos\n}) {\n  _s();\n  const [completedTodos, setCompletedTodos] = useState(new Set());\n  const toggleComplete = index => {\n    const newCompletedTodos = new Set(completedTodos);\n    if (newCompletedTodos.has(index)) {\n      newCompletedTodos.delete(index);\n    } else {\n      newCompletedTodos.add(index);\n    }\n    setCompletedTodos(newCompletedTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"list_container\",\n    className: \"list-group\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((todo, i) => {\n        const id = `checkbox${i}`;\n        const isCompleted = completedTodos.has(i);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `list-group-item ${isCompleted ? 'completed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input me-1\",\n            type: \"checkbox\",\n            id: id,\n            onChange: () => toggleComplete(i),\n            checked: isCompleted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: id,\n            children: todo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(List, \"wRTB7EANVNMDPQZRyUMOT9v1enc=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","List","todos","_s","completedTodos","setCompletedTodos","Set","toggleComplete","index","newCompletedTodos","has","delete","add","id","className","children","map","todo","i","isCompleted","type","onChange","checked","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["D:/front_end_denemeler/react_denemeler/proje/todos-react/src/components/todos/List/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction List({ todos }) {\r\n  const [completedTodos, setCompletedTodos] = useState(new Set());\r\n\r\n  const toggleComplete = (index) => {\r\n    const newCompletedTodos = new Set(completedTodos);\r\n    if (newCompletedTodos.has(index)) {\r\n      newCompletedTodos.delete(index);\r\n    } else {\r\n      newCompletedTodos.add(index);\r\n    }\r\n    setCompletedTodos(newCompletedTodos);\r\n  };\r\n\r\n  return (\r\n    <div id='list_container' className='list-group'>\r\n      <ul>\r\n        {todos.map((todo, i) => {\r\n          const id = `checkbox${i}`;\r\n          const isCompleted = completedTodos.has(i);\r\n          return (\r\n            <li key={i} className={`list-group-item ${isCompleted ? 'completed' : ''}`}>\r\n              <input\r\n                className=\"form-check-input me-1\"\r\n                type=\"checkbox\"\r\n                id={id}\r\n                onChange={() => toggleComplete(i)}\r\n                checked={isCompleted}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor={id}>\r\n                {todo}\r\n              </label>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,IAAIA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,GAAG,CAAC,CAAC,CAAC;EAE/D,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,iBAAiB,GAAG,IAAIH,GAAG,CAACF,cAAc,CAAC;IACjD,IAAIK,iBAAiB,CAACC,GAAG,CAACF,KAAK,CAAC,EAAE;MAChCC,iBAAiB,CAACE,MAAM,CAACH,KAAK,CAAC;IACjC,CAAC,MAAM;MACLC,iBAAiB,CAACG,GAAG,CAACJ,KAAK,CAAC;IAC9B;IACAH,iBAAiB,CAACI,iBAAiB,CAAC;EACtC,CAAC;EAED,oBACET,OAAA;IAAKa,EAAE,EAAC,gBAAgB;IAACC,SAAS,EAAC,YAAY;IAAAC,QAAA,eAC7Cf,OAAA;MAAAe,QAAA,EACGb,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;QACtB,MAAML,EAAE,GAAG,WAAWK,CAAC,EAAE;QACzB,MAAMC,WAAW,GAAGf,cAAc,CAACM,GAAG,CAACQ,CAAC,CAAC;QACzC,oBACElB,OAAA;UAAYc,SAAS,EAAE,mBAAmBK,WAAW,GAAG,WAAW,GAAG,EAAE,EAAG;UAAAJ,QAAA,gBACzEf,OAAA;YACEc,SAAS,EAAC,uBAAuB;YACjCM,IAAI,EAAC,UAAU;YACfP,EAAE,EAAEA,EAAG;YACPQ,QAAQ,EAAEA,CAAA,KAAMd,cAAc,CAACW,CAAC,CAAE;YAClCI,OAAO,EAAEH;UAAY;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eACF1B,OAAA;YAAOc,SAAS,EAAC,kBAAkB;YAACa,OAAO,EAAEd,EAAG;YAAAE,QAAA,EAC7CE;UAAI;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,GAVDR,CAAC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWN,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACvB,EAAA,CArCQF,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AAuCb,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}